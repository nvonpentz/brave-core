diff --git a/chrome/browser/ui/android/toolbar/java/src/org/chromium/chrome/browser/toolbar/top/ToolbarPhone.java b/chrome/browser/ui/android/toolbar/java/src/org/chromium/chrome/browser/toolbar/top/ToolbarPhone.java
index 1e7a5d49490b23273e388d5dce2f525877873272..d2e97e3820c35201485ffc0b47d8761c100471ad 100644
--- a/chrome/browser/ui/android/toolbar/java/src/org/chromium/chrome/browser/toolbar/top/ToolbarPhone.java
+++ b/chrome/browser/ui/android/toolbar/java/src/org/chromium/chrome/browser/toolbar/top/ToolbarPhone.java
@@ -408,6 +408,7 @@ public class ToolbarPhone extends ToolbarLayout implements OnClickListener, TabC
         mCurrentLocationBarColor = color;
         // TODO(https://crbug.com/1239289): Change back to #setTint once our min API level is 23.
         mLocationBarBackground.setColorFilter(color, PorterDuff.Mode.SRC_IN);
+        BraveToolbarLayout.class.cast(this).updateModernLocationBarColorImpl(color);
     }
 
     /**
@@ -525,6 +526,7 @@ public class ToolbarPhone extends ToolbarLayout implements OnClickListener, TabC
                         EventConstants.PARTNER_HOME_PAGE_BUTTON_PRESSED);
             }
         }
+        BraveToolbarLayout.class.cast(this).onClickImpl(v);
     }
 
     @Override
@@ -699,6 +701,7 @@ public class ToolbarPhone extends ToolbarLayout implements OnClickListener, TabC
      * @return The right bounds of the location bar after accounting for any visible right buttons.
      */
     private int getBoundsAfterAccountingForRightButtons() {
+        if (true) return Math.max(mToolbarSidePadding, BraveToolbarLayout.class.cast(this).getBoundsAfterAccountingForRightButtonsImpl(mToolbarButtonsContainer));
         if (mStartSurfaceScrollFraction == 1.0f) return mToolbarSidePadding;
         return Math.max(mToolbarSidePadding, mToolbarButtonsContainer.getMeasuredWidth());
     }
@@ -970,6 +973,7 @@ public class ToolbarPhone extends ToolbarLayout implements OnClickListener, TabC
      * New Tab Page.
      */
     private void updateLocationBarLayoutForExpansionAnimation() {
+        if (!BraveToolbarLayout.class.cast(this).isLocationBarValid(mLocationBar)) return;
         TraceEvent.begin("ToolbarPhone.updateLocationBarLayoutForExpansionAnimation");
         FrameLayout.LayoutParams locationBarLayoutParams =
                 mLocationBar.getPhoneCoordinator().getFrameLayoutParams();
@@ -2117,6 +2121,7 @@ public class ToolbarPhone extends ToolbarLayout implements OnClickListener, TabC
         } else {
             populateUrlClearExpansionAnimatorSet(animators);
         }
+        BraveToolbarLayout.class.cast(this).populateUrlAnimatorSetImpl(hasFocus, URL_FOCUS_TOOLBAR_BUTTONS_DURATION_MS, URL_CLEAR_FOCUS_TABSTACK_DELAY_MS, animators);
         mUrlFocusLayoutAnimator = new AnimatorSet();
         mUrlFocusLayoutAnimator.playTogether(animators);
 
